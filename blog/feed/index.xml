<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
     xmlns:content="http://purl.org/rss/1.0/modules/content/"
     xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
     xmlns:atom="http://www.w3.org/2005/Atom"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:wfw="http://wellformedweb.org/CommentAPI/"
     >
  <channel>
    <title>tanarky.com</title>
    <link>http://tanarky.com/blog</link>
    <description>tanarky website</description>
    <pubDate>Fri, 20 Jan 2012 05:24:37 GMT</pubDate>
    <generator>Blogofile</generator>
    <sy:updatePeriod>hourly</sy:updatePeriod>
    <sy:updateFrequency>1</sy:updateFrequency>
    <item>
      <title>(できるだけ)ポータブルなPython開発環境</title>
      <link>http://tanarky.com/blog/2012/01/20/00a_portable_python_env</link>
      <pubDate>Fri, 20 Jan 2012 14:00:00 JST</pubDate>
      <category><![CDATA[python]]></category>
      <category><![CDATA[tips]]></category>
      <category><![CDATA[install]]></category>
      <guid isPermaLink="true">http://tanarky.com/blog/2012/01/20/00a_portable_python_env</guid>
      <description>(できるだけ)ポータブルなPython開発環境</description>
      <content:encoded><![CDATA[<div class="document">
<div class="contents topic" id="id1">
<p class="topic-title first">目次</p>
<ul class="simple">
<li><a class="reference internal" href="#id2" id="id5">背景</a></li>
<li><a class="reference internal" href="#buildoutvirtualenv1" id="id6">buildoutとvirtualenvを用いた1つの解</a><ul>
<li><a class="reference internal" href="#id3" id="id7">参考手順</a></li>
</ul>
</li>
<li><a class="reference internal" href="#id4" id="id8">まとめ など</a></li>
</ul>
</div>
<div class="section" id="id2">
<h3><a class="toc-backref" href="#id5">背景</a></h3>
<p>せっかくLLをさわっているので、</p>
<ul class="simple">
<li>OS依存が少ない</li>
<li>複数versionの環境の混在</li>
<li>構築の簡単さ</li>
<li>本番環境でも使える性能</li>
<li>環境をコピーできる</li>
</ul>
<p>というPython環境が欲しくて、色々考えてる</p>
</div>
<div class="section" id="buildoutvirtualenv1">
<h3><a class="toc-backref" href="#id6">buildoutとvirtualenvを用いた1つの解</a></h3>
<p>以下のようなことを考えた</p>
<ul class="simple">
<li>コンパイルが必要なライブラリ(Python自体も含む)をbuildoutでビルドする<ul>
<li>Python</li>
<li>zlib</li>
<li>Graphviz</li>
<li>画像系パッケージ?</li>
<li>(yum/aptitudeでもいいが、後々環境が混在できなくなるリスク)</li>
</ul>
</li>
<li>buldoutでbuildしたpythonを指定して、virtualenv環境を構築する</li>
<li>PyPIパッケージは、virtualenvにinstallする</li>
<li>サービスはvirtualenv環境ごとに分ける<ul>
<li>サービスごとにpythonのバージョンをわけるためにBuildするのは大変</li>
<li>サービスごとにライブラリのバージョンが競合する可能性はあるので
その時はbuildout環境を増やす</li>
</ul>
</li>
<li>自分で書いたコードは、githubや自前distサーバなどにパッケージとしておいておく</li>
<li>環境から、distサーバ指定でpip installしてdeploy</li>
</ul>
<div class="section" id="id3">
<h4><a class="toc-backref" href="#id7">参考手順</a></h4>
<ol class="arabic simple">
<li>まずは、buildoutでOS依存しない場所にPythonと
依存するライブラリなどをビルド</li>
</ol>
<div class="highlight"><pre>% mkdir /tmp/py27
% cd /tmp/py27
% (buildout.cfg + bootstrap.pyを用意)
% cat buildout.cfg
[buildout]
python = python
parts =
    python
    env

[python]
recipe = zc.recipe.cmmi
url = http://www.python.org/ftp/python/2.7.2/Python-2.7.2.tgz
executable = ${buildout:parts-directory}/python/bin/python2.7
environment =
    LDFLAGS=-Wl,-rpath,${buildout:parts-directory}/python/lib
extra_options =
    --enable-unicode=ucs4
    --enable-shared
    --with-threads

[env]
recipe = zc.recipe.egg
eggs =
     virtualenv
     virtualenvwrapper

interpreter = python

% python bootstrap.py
% bin/buildout
</pre></div>
<ol class="arabic simple" start="2">
<li>1.で構築したpythonを使って、virtualenv環境を作る</li>
</ol>
<div class="highlight"><pre>% export WORKON_HOME=/tmp/virtualenvs
% export VIRTUALENVWRAPPER_HOOK_DIR=/tmp/virtualenvs
% export VIRTUALENVWRAPPER_LOG_DIR=/tmp/virtualenvs
## FIXME: クリーンな環境でうまくいくか?
% mkvirtualenv -p /tmp/py27/parts/python/bin/python testenv
% /tmp/virtualenvs/testenv/bin/pip install Flask
% /tmp/virtualenvs/testenv/bin/pip install gunicorn
% /tmp/virtualenvs/testenv/bin/pip install supervisor
</pre></div>
<ol class="arabic simple" start="3">
<li>開発</li>
</ol>
<div class="highlight"><pre>% cat myserver.py

from flask import Flask

app = Flask(__name__)

@app.route(&#39;/&#39;)
def index():
    return &quot;&lt;h1&gt;hello!Yes!&lt;/h1&gt;&quot;

if __name__ == &#39;__main__&#39;:
    app.run(debug=True)
% /tmp/virtualenvs/testenv/bin/python myserver.py
   * Running on http://127.0.0.1:5000/
   * Restarting with reloader
</pre></div>
<ol class="arabic simple" start="4">
<li>インストール</li>
</ol>
<p>cpでinstallしないほうがいい(暫定手順)</p>
<div class="highlight"><pre>% sudo mkdir /tmp/virtualenvs/testenv/lib/python2.7/site-packages/mypj
% touch /tmp/virtualenvs/testenv/lib/python2.7/site-packages/mypj/__init__.py
% sudo cp myserver.py /tmp/virtualenvs/testenv/lib/python2.7/site-packages/mypj/
</pre></div>
<ol class="arabic simple" start="5">
<li>gunicornで本番プロセス起動</li>
</ol>
<p>本当はdaemonモード</p>
<div class="highlight"><pre>% /tmp/virtualenvs/testenv/bin/gunicorn mypj.myserver:app
</pre></div>
</div>
</div>
<div class="section" id="id4">
<h3><a class="toc-backref" href="#id8">まとめ など</a></h3>
<ul class="simple">
<li>gunicornが起動するところまで確認できたので、supervisorで監視体制を整えたい</li>
<li>古めのCentOSでも動くか?</li>
<li>zlib/graphvizなどのライブラリ系もbuildoutに組み込みたい</li>
</ul>
</div>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>PostfixでGmail経由メール送信環境構築 on Ubuntu</title>
      <link>http://tanarky.com/blog/2012/01/02/009_install_postfix_on_ubuntu</link>
      <pubDate>Mon, 02 Jan 2012 14:00:00 JST</pubDate>
      <category><![CDATA[tips]]></category>
      <category><![CDATA[install]]></category>
      <category><![CDATA[ubuntu]]></category>
      <guid isPermaLink="true">http://tanarky.com/blog/2012/01/02/009_install_postfix_on_ubuntu</guid>
      <description>PostfixでGmail経由メール送信環境構築 on Ubuntu</description>
      <content:encoded><![CDATA[<div class="document">
<div class="contents topic" id="id1">
<p class="topic-title first">目次</p>
<ul class="simple">
<li><a class="reference internal" href="#id2" id="id4">環境構築手順</a></li>
<li><a class="reference internal" href="#id3" id="id5">参考</a></li>
</ul>
</div>
<div class="section" id="id2">
<h3><a class="toc-backref" href="#id4">環境構築手順</a></h3>
<p>AppEngineの開発環境で、メール送信機能を使うために
postfixを使ったgmail送信環境の構築を行ったので、メモ。</p>
<p>まずは、package install</p>
<div class="highlight"><pre>% sudo aptitude install postfix
</pre></div>
<p>/etc/postfix/main.cf を編集</p>
<p>以下を追記</p>
<div class="highlight"><pre># tanarky added
mydomain = tanarky.com
myorigin = $myhostname
relayhost = [smtp.gmail.com]:587
smtp_use_tls = yes
smtp_tls_CAfile = /etc/ssl/certs/ca-certificates.crt
smtp_sasl_auth_enable = yes
smtp_sasl_password_maps = hash:/etc/postfix/relay_password
smtp_sasl_security_options = noanonymous
smtp_sasl_tls_security_options = noanonymous
smtp_sasl_mechanism_filter = plain
</pre></div>
<p>パスワードファイル作成</p>
<div class="highlight"><pre>% sudo cat /etc/postfix/relay_password
[smtp.gmail.com]:587 *(Googleアカウント)*@gmail.com:*(Googleアカウントパスワード)*
% sudo postmap /etc/postfix/relay_password
% ls -l /etc/postfix/relay_password*
-rw-r--r-- 1 root root    48 2012-01-01 22:17 /etc/postfix/relay_password
-rw-r--r-- 1 root root 12288 2012-01-01 22:17 /etc/postfix/relay_password.db
% sudo rm /etc/postfix/relay_password
% ls -l /etc/postfix/relay_password*
-rw-r--r-- 1 root root 12288 2012-01-01 22:17 /etc/postfix/relay_password.db
</pre></div>
<p>postfix restartしてテスト送信</p>
<div class="highlight"><pre>% sudo /etc/init.d/postfix restart
% sendmail -t ***
To: ***
From: ***
Subject: hello

world.

.
%
</pre></div>
</div>
<div class="section" id="id3">
<h3><a class="toc-backref" href="#id5">参考</a></h3>
<ul class="simple">
<li><a class="reference external" href="http://www.icoro.com/200908243988.html">http://www.icoro.com/200908243988.html</a></li>
<li><a class="reference external" href="http://blog.tanarky.com/2010/09/centosgmail.html">http://blog.tanarky.com/2010/09/centosgmail.html</a></li>
</ul>
</div>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>PythonでQRコード生成</title>
      <link>http://tanarky.com/blog/2011/12/19/008_python_qrcode</link>
      <pubDate>Mon, 19 Dec 2011 14:00:00 JST</pubDate>
      <category><![CDATA[python]]></category>
      <category><![CDATA[tips]]></category>
      <guid isPermaLink="true">http://tanarky.com/blog/2011/12/19/008_python_qrcode</guid>
      <description>PythonでQRコード生成</description>
      <content:encoded><![CDATA[<div class="document">
<div class="contents topic" id="id1">
<p class="topic-title first">目次</p>
<ul class="simple">
<li><a class="reference internal" href="#id2" id="id5">環境構築手順</a></li>
<li><a class="reference internal" href="#id3" id="id6">動作確認</a></li>
<li><a class="reference internal" href="#id4" id="id7">リンク</a></li>
</ul>
</div>
<div class="section" id="id2">
<h3><a class="toc-backref" href="#id5">環境構築手順</a></h3>
<p>libqrencodeのpython bindingによるQRコード生成</p>
<p>まずはinstall</p>
<div class="highlight"><pre>% sudo aptitude install libqrencode3 libqrencode-dev
% pip install qrencode
</pre></div>
</div>
<div class="section" id="id3">
<h3><a class="toc-backref" href="#id6">動作確認</a></h3>
<p>サンプルコード</p>
<div class="highlight"><pre><span class="kn">import</span> <span class="nn">qrencode</span>

<span class="n">e</span> <span class="o">=</span> <span class="n">Encoder</span><span class="p">()</span>
<span class="n">image</span> <span class="o">=</span> <span class="n">e</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s">&#39;http://tanarky.com/&#39;</span><span class="p">,</span> <span class="p">{</span> <span class="s">&#39;width&#39;</span><span class="p">:</span> <span class="mi">100</span> <span class="p">})</span>
<span class="n">image</span><span class="o">.</span><span class="n">save</span><span class="p">(</span><span class="s">&quot;/tmp/qrcode.png&quot;</span><span class="p">)</span>
</pre></div>
</div>
<div class="section" id="id4">
<h3><a class="toc-backref" href="#id7">リンク</a></h3>
<ul class="simple">
<li><a class="reference external" href="https://github.com/bitly/pyqrencode">https://github.com/bitly/pyqrencode</a></li>
</ul>
</div>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>CentOS 5.5 に python2.7環境を構築</title>
      <link>http://tanarky.com/blog/2011/11/16/005_python_2.7_install_on_centos_5.5</link>
      <pubDate>Wed, 16 Nov 2011 00:00:00 JST</pubDate>
      <category><![CDATA[python]]></category>
      <category><![CDATA[tips]]></category>
      <category><![CDATA[install]]></category>
      <category><![CDATA[centos]]></category>
      <guid isPermaLink="true">http://tanarky.com/blog/2011/11/16/005_python_2.7_install_on_centos_5.5</guid>
      <description>CentOS 5.5 に python2.7環境を構築</description>
      <content:encoded><![CDATA[<div class="document">
<div class="contents topic" id="id1">
<p class="topic-title first">目次</p>
<ul class="simple">
<li><a class="reference internal" href="#id2" id="id4">手順</a></li>
<li><a class="reference internal" href="#id3" id="id5">参考</a></li>
</ul>
</div>
<div class="section" id="id2">
<h3><a class="toc-backref" href="#id4">手順</a></h3>
<p>CentOS 5.5に入っているpythonのバージョンは、2.4.3と超古いので、
2.7.2の環境を構築したときのメモ</p>
<p>一度2.7.2の環境を作れば、
あとはvirtualenvで環境を切り分ければいいので、
それまでの手順</p>
<div class="highlight"><pre>% mkdir ~/src_python2.7
% cd ~/src_python2.7
% wget http://www.python.org/ftp/python/2.7.2/Python-2.7.2.tar.bz2
% tar -xvjf Python-2.7.2.tar.bz2
% cd Python-2.7.2
% ./configure --enable-shared --with-threads
% make
% sudo make install
% sudo ln -s /opt/python2.7/lib/libpython2.7.so.1.0 /lib64/libpython2.7.so.1.0
% sudo ln -s /usr/local/bin/python2.7 /usr/bin/python2.7
% mkdir ~/src_setuptools
% cd ~/src_setuptools
% wget http://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11-py2.7.egg
% sudo yum install zlib-devel.x86_64
% chmod +x setuptools-0.6c11-py2.7.egg
% sudo ./setuptools-0.6c11-py2.7.egg
% sudo easy_install pip
% sudo pip install virtualenv virtualenvwrapper
</pre></div>
<p>virtualenv環境構築。
後で配布することを想定して、デフォルトの&quot;.virtualenvs&quot;から&quot;virtualenv&quot;に変更する。</p>
<p>以下を.zshrcに追加</p>
<div class="highlight"><pre>export WORKON_HOME=$HOME/virtualenvs
source /usr/local/bin/virtualenvwrapper.sh
</pre></div>
<p>環境を構築</p>
<div class="highlight"><pre>% mkvirtualenv -p /usr/local/bin/python2.7 2.7.2
% workon 2.7.2
</pre></div>
<p>とりあえずうまく環境が構築できたが、
複数台環境にpython環境を丸ごと配布したいので、
次はその方法を調べてみる。</p>
</div>
<div class="section" id="id3">
<h3><a class="toc-backref" href="#id5">参考</a></h3>
<ul class="simple">
<li><a class="reference external" href="http://python.codenote.net/python/centos5-6%E3%81%ABpython2-7%E3%81%A8virtualenv%E3%81%A7%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83%E3%82%92%E6%95%B4%E3%81%88%E3%82%8B.html">CentOS5.6 に Python2.7 + virtualenv で開発環境を整える | Pythonコード帳</a></li>
</ul>
</div>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Ubuntu 10.04 LTS server でpython環境をbuildoutで構築する</title>
      <link>http://tanarky.com/blog/2011/11/09/007_python_buildout_on_ubuntu_server_x86_64</link>
      <pubDate>Wed, 09 Nov 2011 14:00:00 JST</pubDate>
      <category><![CDATA[python]]></category>
      <category><![CDATA[tips]]></category>
      <category><![CDATA[install]]></category>
      <category><![CDATA[ubuntu]]></category>
      <guid isPermaLink="true">http://tanarky.com/blog/2011/11/09/007_python_buildout_on_ubuntu_server_x86_64</guid>
      <description>Ubuntu 10.04 LTS server でpython環境をbuildoutで構築する</description>
      <content:encoded><![CDATA[<div class="document">
<div class="contents topic" id="id1">
<p class="topic-title first">目次</p>
<ul class="simple">
<li><a class="reference internal" href="#id2" id="id3">手順</a></li>
</ul>
</div>
<div class="section" id="id2">
<h3><a class="toc-backref" href="#id3">手順</a></h3>
<div class="highlight"><pre>% sudo apt-get install zsh aptitude
% sudo aptitude update
% sudo aptitude install gcc zlib1g-dev libc6-dev libjpeg-dev -y
</pre></div>
<ul class="simple">
<li>2012/01/22 追記<ul>
<li>PILでjpegサポートさせるために、libjpeg-devを追加</li>
</ul>
</li>
</ul>
</div>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>githubとblogofileで独自ドメイン無料Blog環境構築</title>
      <link>http://tanarky.com/blog/2011/10/29/002_github_blogofile_original_domain</link>
      <pubDate>Sat, 29 Oct 2011 20:00:00 JST</pubDate>
      <category><![CDATA[python]]></category>
      <category><![CDATA[tips]]></category>
      <category><![CDATA[ubuntu]]></category>
      <guid isPermaLink="true">http://tanarky.com/blog/2011/10/29/002_github_blogofile_original_domain</guid>
      <description>githubとblogofileで独自ドメイン無料Blog環境構築</description>
      <content:encoded><![CDATA[<div class="document">
<div class="contents topic" id="id1">
<p class="topic-title first">目次</p>
<ul class="simple">
<li><a class="reference internal" href="#id2" id="id9">結論</a><ul>
<li><a class="reference internal" href="#github-pageshtml" id="id10">Github PagesによるHTML公開+独自ドメイン設定</a></li>
<li><a class="reference internal" href="#blogofile" id="id11">Blogofileを使った記事+デザイン構築</a></li>
<li><a class="reference internal" href="#bootstrap-from-twitter" id="id12">Bootstrap from twitterを使ったデザイン</a></li>
<li><a class="reference internal" href="#disqus" id="id13">DISQUSなどブログパーツを用いたソーシャル対応など</a></li>
</ul>
</li>
<li><a class="reference internal" href="#id3" id="id14">諦めた機能</a></li>
<li><a class="reference internal" href="#id4" id="id15">まとめ</a></li>
</ul>
</div>
<div class="section" id="id2">
<h3><a class="toc-backref" href="#id9">結論</a></h3>
<p>いきなり結論。</p>
<p><a class="reference external" href="/blog/2011/10/29/003_problems_of_web_tool_based_blog_service">既存ブログサービスの問題に対する考察</a> で考えた理想のBlog環境は
以下のものを組み合わせることにより、ほぼ満足いく環境ができた。</p>
<ol class="arabic simple">
<li><a class="reference external" href="http://pages.github.com/">GitHub Pages</a> によるHTML公開+独自ドメイン設定</li>
<li><a class="reference external" href="http://www.blogofile.com/">Blogofile</a> による記事HTML+デザインの一括generate</li>
<li><a class="reference external" href="http://twitter.github.com/bootstrap/">Bootstrap from twitter</a> によるデザイン設定の簡略化</li>
<li><a class="reference external" href="http://disqus.com/">DISQUS</a> やその他ブログパーツによるブログのソーシャル化</li>
</ol>
<p>今見ているこのBlogのソースコードは全て</p>
<p><a class="reference external" href="https://github.com/tanarky/tanarky.github.com">https://github.com/tanarky/tanarky.github.com</a></p>
<p>に上げている。</p>
<p>以下、詳細。</p>
<div class="section" id="github-pageshtml">
<h4><a class="toc-backref" href="#id10">Github PagesによるHTML公開+独自ドメイン設定</a></h4>
<p>GitHubでは、コードだけではなく、HTMLなどのドキュメントも
GitHubのサーバを用いて公開することができる。</p>
<p>静的なファイルであれば、HTMLやCSS/Javascriptなど公開可能。
画像ファイルも公開可能だが、無料ユーザの場合、容量制限が300Mなので、
画像ファイル置き場としてはあまり望ましくない。
PHPファイルなどサーバサイドでの動的処理は動かない。</p>
<p>この手段は、一部のオープンソースプロジェクトでよく利用されている。</p>
<p>設定な方法詳細は、 <a class="reference external" href="http://pages.github.com/">GitHub Pages</a> を参照すれば詳しく書いてあるが
ユーザごとのページ設定手順をざっと説明すると、以下の通り。</p>
<ol class="arabic simple">
<li>GitHubのユーザ名(アカウント)を tanarky とする</li>
<li>tanarky.github.com というリポジトリを作成する</li>
<li>リポジトリ直下にindex.htmlという名前のHTMLファイルをコミットし、pushする</li>
<li><a class="reference external" href="http://tanarky.github.com/">http://tanarky.github.com/</a> で公開したHTMLが見えるようになる</li>
</ol>
<p>と、いたって簡単。</p>
<p>tanarky.github.com というドメイン名が気に入らなければ、
<strong>独自ドメイン設定も可能</strong> 。</p>
<p>valuedomainなどで取得済みのドメイン名が <em>example.com</em> だった場合、</p>
<p><em>github.example.com</em> というサブドメインで公開したければ、</p>
<div class="highlight"><pre>cname github pages.github.com.
</pre></div>
<p>サブドメインではなく、 <em>example.com</em> で公開したければ、</p>
<div class="highlight"><pre>a @ 207.97.227.245
</pre></div>
<p>と、どちらかお好みのDNS設定をする。</p>
<p>次に、tanarky.github.comというリポジトリの直下に、 <em>CNAME</em> というファイル名で、
中身に公開したい独自ドメイン名を書く。</p>
<p><em>example.com</em> で公開したければ、</p>
<div class="highlight"><pre>example.com
</pre></div>
<p>と1行書いて保存すればOK。</p>
<p>これをgit pushして、DNSの設定が反映されれば設定完了。</p>
<p>GitHubを用いることで、無料のHTMLサーバと、
gitによるコード管理とバックアップ環境が、同時に無料で手に入ってしまった。</p>
</div>
<div class="section" id="blogofile">
<h4><a class="toc-backref" href="#id11">Blogofileを使った記事+デザイン構築</a></h4>
<p><a class="reference external" href="http://www.blogofile.com/">Blogofile</a> とは、markdown形式やrestructuredText形式のファイルから、
静的HTMLをgenerateして、ブログページを構築してくれるPythonで書かれたツールのこと。</p>
<p>1コマンドでカテゴリ分類やRSSなども一括でgenerateしてくれる。</p>
<p>インストール方法、の前に、まずはPython環境を整える必要があるので、
<a class="reference external" href="/blog/2011/10/26/001_python_development_environment/">Ubuntu11.10のPython開発環境を整備</a> を一読することをおすすめします。</p>
<p>綺麗なPython環境ができたところで、インストール。</p>
<div class="highlight"><pre>% pip install blogofile
% cd ~/github/tanarky.github.com
% mkdir _blogofile
% cd _blogofile
% blogofile init simple_blog
% blogofile build
</pre></div>
<p>これで完了。
ポイントとしては、ディレクトリ名を &quot;_blogofile&quot; と &quot;_&quot; から始まる名前にしておくこと。</p>
<p>GitHub Page経由では、&quot;_&quot; から始まるファイル名やディレクトリ名は見えなくなるという仕様を利用するため。</p>
<p>github経由でソースが見れるんだから意味ないじゃん、という言い分もあるが、
GitHub Page経由では公開する必要がないファイルなので、
公開したいファイルやディレクトリと明示的に区別するために、&quot;_&quot; から始まる名前にしておく。</p>
<p>buildが終わったら、blogofileには、 <strong>Webサーバが同梱されている</strong> ので、</p>
<div class="highlight"><pre>% blogofile serve 10080
Blogofile server started on 127.0.0.1:10080 ...
</pre></div>
<p>などとWebサーバを起動させれば、http://localhost:10080/でサイトを確認することができる。</p>
<p>投稿は、_blogofile/_post/ 以下に、markdown形式やrst形式などでファイルを置いておけば、
build実行時に勝手にブログ記事にしてくれる。</p>
<p>自分はrst形式に慣れているので、rst形式で記事を書いている。</p>
</div>
<div class="section" id="bootstrap-from-twitter">
<h4><a class="toc-backref" href="#id12">Bootstrap from twitterを使ったデザイン</a></h4>
<p>デザインを1から作るのは大変なので、使ったことがある jQuery UI を使おうか、と思ったが、
このブログでは、勉強がてら、 <a class="reference external" href="http://twitter.github.com/bootstrap/">Bootstrap from twitter</a> を使ってみた。</p>
<p>アイコンなどの画像は一切ついていないが、
レイアウトなど、非常に直感的にデザインをいじることができるので満足している。</p>
</div>
<div class="section" id="disqus">
<h4><a class="toc-backref" href="#id13">DISQUSなどブログパーツを用いたソーシャル対応など</a></h4>
<p>動的な処理は一切動かないので、各種ブログパーツに委ねないと、なんとも寂しいブログになるので、
好みのものを配置する。</p>
<p>個人的に、あまりブログパーツを置き過ぎると表示が重くなるのと、
見た目もごちゃごちゃするので、おいたのは以下のものだけ。</p>
<ul class="simple">
<li><a class="reference external" href="http://disqus.com/">DISQUS</a></li>
<li><a class="reference external" href="http://twitter.com/about/resources/tweetbutton">twitter公式 tweet数表示widget</a></li>
</ul>
<p><a class="reference external" href="http://disqus.com/">DISQUS</a> は、Javascriptで動く、コメントやトラックバック機能を実現できるモジュールで、
このブログの一番下にも貼ってあるブログパーツ。</p>
<p>ログインしないとコメントさせない設定、など非常に機能が豊富で、
何より静的なHTMLの中でこういう機能が実現できるのが嬉しい。</p>
</div>
</div>
<div class="section" id="id3">
<h3><a class="toc-backref" href="#id14">諦めた機能</a></h3>
<p>静的なHTMLのブログ、ということでいくつか諦めた機能は以下。</p>
<ul class="simple">
<li>Smartphone用にページ表示を最適化して見せること</li>
<li>時限式の記事反映（明日の12時に自動で反映されるように設定する、など）</li>
<li>画像アップロード機能（画像はFlickrなどにまとめて置くようにする）</li>
</ul>
</div>
<div class="section" id="id4">
<h3><a class="toc-backref" href="#id15">まとめ</a></h3>
<p>長々と書いたが、上記のような構成のブログ環境は、アメリカなど海外ではやや浸透しつつある構成っぽい。
ぐぐると英語のページが色々ひっかかったので。</p>
<p>ただ、上記の設定内容を1つのページにまとめて書かれたものはなかったので、頑張って書いてみた次第。</p>
<p>GitHubにpushしなくても、上述の通り、Blogofileにはwebサーバも同梱されているので、
プライベートなブログとしてこっそり書くこともできるし、
個人ブログという用途だけではなく、プロジェクトページや企業ページでも使えると思うので、
興味を持った人は是非お試しください。</p>
<p>Blogofileの動作変更、SEO対策、記事を書く上でのgit branchの使い方、など
細かい設定点は他にも色々あるので、今後記事にしていく予定。</p>
</div>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>既存ブログサービスの問題に対する考察</title>
      <link>http://tanarky.com/blog/2011/10/29/003_problems_of_web_tool_based_blog_service</link>
      <pubDate>Sat, 29 Oct 2011 19:00:00 JST</pubDate>
      <category><![CDATA[python]]></category>
      <category><![CDATA[tips]]></category>
      <category><![CDATA[ubuntu]]></category>
      <guid isPermaLink="true">http://tanarky.com/blog/2011/10/29/003_problems_of_web_tool_based_blog_service</guid>
      <description>既存ブログサービスの問題に対する考察</description>
      <content:encoded><![CDATA[<div class="document">
<div class="contents topic" id="id1">
<p class="topic-title first">目次</p>
<ul class="simple">
<li><a class="reference internal" href="#id2" id="id8">背景</a></li>
<li><a class="reference internal" href="#id3" id="id9">考察</a><ul>
<li><a class="reference internal" href="#id4" id="id10">ブログ記事を書くためのツール問題</a></li>
<li><a class="reference internal" href="#id5" id="id11">ブログのデザインを設定するツール問題</a></li>
<li><a class="reference internal" href="#id6" id="id12">ブログを公開する環境の問題</a></li>
</ul>
</li>
<li><a class="reference internal" href="#id7" id="id13">まとめ</a></li>
</ul>
</div>
<div class="section" id="id2">
<h3><a class="toc-backref" href="#id8">背景</a></h3>
<p>2009/08 - 2010/07まで、ブログを1年間毎日更新する、という目標を掲げて、
365記事以上書き、アクセスを増やした中で一番感じたことは、</p>
<p><strong>ブログを更新することは面倒である</strong></p>
<p>ということだった。</p>
<p>自分で書きためたネタを、時間がたって忘れたときに自分で検索して思い出したり、
書くことで頭が整理された、などの多大なメリットがあったにも関わらず、
最終的には、 <em>面倒</em> がメリットをうわまって更新を続けられなくなってしまった。</p>
</div>
<div class="section" id="id3">
<h3><a class="toc-backref" href="#id9">考察</a></h3>
<p>この <em>面倒</em> の原因をざっと分けると、</p>
<ol class="arabic simple">
<li>ネタの問題、記事のクオリティの問題</li>
<li>環境やツールの問題</li>
</ol>
<p>上記の2点。</p>
<p>1に関しては慣れの問題である程度解消したりもしたが、
2に関してはブログを書き続けても解消されるどころか、問題がどんどん深刻化した。</p>
<p>深刻化した問題とは、</p>
<ol class="arabic simple">
<li>ブログ記事を書くためのツール問題</li>
<li>ブログのデザインを設定するツール問題</li>
<li>ブログを公開する環境の問題</li>
</ol>
<p>の3つ。</p>
<p>以下でそれぞれ考察してみる。</p>
<div class="section" id="id4">
<h4><a class="toc-backref" href="#id10">ブログ記事を書くためのツール問題</a></h4>
<p>まずは、ブログツールにログインして、ブラウザ上で編集する、という行為が面倒だった。</p>
<p>当然ログインが必要だし、ブラウザ上で編集するためいちいち煩わしい。
小さいテキストエリアでちまちま編集しなきゃいけないし、
各画面間の遷移も積み重なってくるとイライラする。</p>
<p>加えて、たとえWYSIWYGという補助ツールがあっても、
文書をちょっと装飾するためにHTMLを書くのはちょっと苦行すぎる。
HTMLで記事を書くと、全体デザインを変えたときに記事とのミスマッチが生じて、
結局気になって、記事のHTMLまで編集する羽目になる。</p>
<p>一番問題なのは、記事のバージョン管理ができないこと。
前回との差分をdiff形式で見れないなんて効率が悪すぎる。</p>
</div>
<div class="section" id="id5">
<h4><a class="toc-backref" href="#id11">ブログのデザインを設定するツール問題</a></h4>
<p>記事ツールの問題と同様、たいていのブログサービスでは、
テンプレート中にCSSを埋め込む形式なので管理が煩雑。
Javascriptも同様の形で埋めこむので、デザインテンプレートを直接編集するのは至難の業。</p>
<p>で、必死こいて編集したテンプレートファイルはバージョン管理できないので、
以前の状態に戻すには自分でバックアップを取っておくしかない。</p>
</div>
<div class="section" id="id6">
<h4><a class="toc-backref" href="#id12">ブログを公開する環境の問題</a></h4>
<p>じゃあ、自分でブログサービス作ればいいじゃん、となるが、
ブログに対してそんな熱意はない。</p>
<p>ブログを書く本来の目的は、ブログを書いて知識をためることであって、
ブログ自体を作ることじゃないので、本末転倒はしたくない。</p>
<p>レンタルサーバに、WordPressやらMTやらを入れて、
最低限のカスタマイズをして運用する、という方法も、レンタルサーバ代がかかるし、
両方共Webツールなので、問題の解消にならない。</p>
<p>Bloggerなどは、記事の公開などのAPIが用意されているので、
ローカルで編集後にAPI経由で記事Uploadすることも可能だが、
プレビューするには、ツールにログインしてといった通常の手段を用いるしかなかった。</p>
</div>
</div>
<div class="section" id="id7">
<h3><a class="toc-backref" href="#id13">まとめ</a></h3>
<p>以上の考察を踏まえると、
自分が必要とするのは、以下のようなブログサービス</p>
<ol class="arabic simple">
<li>Webツールベースではなく、emacsなどで編集したファイルをuploadする形式であること</li>
<li>HTMLで記事は書かない。wikiやrestructuredText形式など、
後からでもHTMLに変換可能な形式で書けること</li>
<li>svnやgitを用いて記事やデザインをバージョン管理できること</li>
<li>本番反映前に事前にページを確認できる環境があること</li>
<li>無料であること（無料のサービス、またはそれらを組み合わせて環境構築できること）</li>
<li>環境を構築するための開発は必要最低限であること</li>
</ol>
</div>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Ubuntu11.10のPython開発環境を整備</title>
      <link>http://tanarky.com/blog/2011/10/26/001_python_development_environment</link>
      <pubDate>Wed, 26 Oct 2011 15:22:00 JST</pubDate>
      <category><![CDATA[python]]></category>
      <category><![CDATA[tips]]></category>
      <category><![CDATA[ubuntu]]></category>
      <guid isPermaLink="true">http://tanarky.com/blog/2011/10/26/001_python_development_environment</guid>
      <description>Ubuntu11.10のPython開発環境を整備</description>
      <content:encoded><![CDATA[<div class="document">
<div class="contents topic" id="id1">
<p class="topic-title first">目次</p>
<ul class="simple">
<li><a class="reference internal" href="#id2" id="id5">背景</a></li>
<li><a class="reference internal" href="#id3" id="id6">インストール手順</a></li>
<li><a class="reference internal" href="#id4" id="id7">参考リンク</a></li>
</ul>
</div>
<div class="section" id="id2">
<h3><a class="toc-backref" href="#id5">背景</a></h3>
<p>Google AppEngineで使い始めたのをきっかけにPythonにハマっている。
ハマった理由は以下の通り。</p>
<ul class="simple">
<li>標準で備わってる機能が多い(CSV parserなど)</li>
<li>Cのライブラリ連携が楽そう(ctypesなど)</li>
<li>PyPI(PerlにおけるCPAN)パッケージが充実している</li>
<li>など</li>
</ul>
<p>ただ、パッケージが充実しているのはいいが、
野良CPANパッケージをinstallすると環境が汚れたり、
ちょっとお試しでinstallしたい場合に躊躇してしまう(Perlも同様)</p>
<p>pythonの場合、virtualenvを使えば、pythonのバージョン違いも含めて、
複数のpython環境を自分のHOMEディレクトリ以下で簡単に管理できるので、
その設定手順をまとめる</p>
</div>
<div class="section" id="id3">
<h3><a class="toc-backref" href="#id6">インストール手順</a></h3>
<div class="highlight"><pre>% sudo aptitude install python-virtualenv virtualwrapper
% sudo aptitude install python3.2 python3.2-dev
% mkvirtualenv -p /usr/bin/python2.7 2.7.2
% mkvirtualenv -p /usr/bin/python3.2 3.2.2
</pre></div>
<p>パッケージをinstallできたら、
以下を.zshrcに追加</p>
<div class="highlight"><pre>[ -f $HOME/.pythonbrew/etc/bashrc ] &amp;&amp; source $HOME/.pythonbrew/etc/bashrc
[ -f /etc/bash_completion.d/virtualenvwrapper ] &amp;&amp; source /etc/bash_completion.d/virtualenvwrapper
workon 2.7.2
</pre></div>
<p>これで準備は完了</p>
<p>後はterminal上で、&quot;workon 2.7.2&quot; や &quot;workon 3.2.2&quot; などと打てば
(python versionが異なる)環境を瞬時に切り替えられる</p>
<p>これで環境ごとにパッケージを完全に別で管理できるので、
とりあえずインストールして使ってみるsandbox環境として別に1つ用意するのも、あり。</p>
<p>pythonbrewなどのwrapperも調べたが、自分の中では上記の手順で今のところ満足。
Pythonの強みは環境構築の簡単さだと思っている。特にUbuntuとは相性がいい。</p>
<p>ちなみに、Perlにはperlbrewが、RubyにはRVMがあり、それぞれ複数環境を管理できる。</p>
</div>
<div class="section" id="id4">
<h3><a class="toc-backref" href="#id7">参考リンク</a></h3>
<ul class="simple">
<li><a class="reference external" href="http://www.ianlewis.org/jp/virtualenv-pip-fabric">virtualenv, virtualenvwrapper, pip を使う方法 - Ian Lewis</a></li>
<li><a class="reference external" href="http://stackoverflow.com/questions/1534210/use-different-python-version-with-virtualenv">Use different Python version with virtualenv - Stack Overflow</a></li>
<li><a class="reference external" href="http://d.hatena.ne.jp/pasela/20110704/pythonbrew">Macにpythonbrew+virtualenvでPython環境を作ってみた</a></li>
</ul>
</div>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>ドキュメントデザインテスト</title>
      <link>http://tanarky.com/blog/2011/10/26/000_document_design_test</link>
      <pubDate>Wed, 26 Oct 2011 00:00:00 JST</pubDate>
      <category><![CDATA[test]]></category>
      <category><![CDATA[design]]></category>
      <guid isPermaLink="true">http://tanarky.com/blog/2011/10/26/000_document_design_test</guid>
      <description>ドキュメントデザインテスト</description>
      <content:encoded><![CDATA[<div class="document" id="restructuredtext-demonstration">
<h2 class="title">reStructuredText Demonstration</h2>
<h3 class="subtitle" id="examples-of-syntax-constructs">Examples of Syntax Constructs</h3>
<table class="docinfo" frame="void" rules="none">
<col class="docinfo-name" />
<col class="docinfo-content" />
<tbody valign="top">
<tr><th class="docinfo-name">Author:</th>
<td>David Goodger</td></tr>
<tr><th class="docinfo-name">Address:</th>
<td><pre class="address">
123 Example Street
Example, EX  Canada
A1B 2C3
</pre>
</td></tr>
<tr><th class="docinfo-name">Contact:</th>
<td><a class="first last reference external" href="mailto:goodger&#64;python.org">goodger&#64;python.org</a></td></tr>
<tr><th class="docinfo-name">Authors:</th>
<td>Me
<br />Myself
<br />I</td></tr>
<tr><th class="docinfo-name">Organization:</th>
<td>humankind</td></tr>
<tr><th class="docinfo-name">Date:</th>
<td>2006-05-21</td></tr>
<tr><th class="docinfo-name">Status:</th>
<td>This is a &quot;work in progress&quot;</td></tr>
<tr><th class="docinfo-name">Revision:</th>
<td>4564</td></tr>
<tr><th class="docinfo-name">Version:</th>
<td>1</td></tr>
<tr><th class="docinfo-name">Copyright:</th>
<td>This document has been placed in the public domain. You
may do with it as you wish. You may copy, modify,
redistribute, reattribute, sell, buy, rent, lease,
destroy, or improve it, quote it at length, excerpt,
incorporate, collate, fold, staple, or mutilate it, or do
anything else to it that your or anyone else's heart
desires.</td></tr>
<tr class="field"><th class="docinfo-name">field name:</th><td class="field-body">This is a generic bibliographic field.</td>
</tr>
<tr class="field"><th class="docinfo-name">field name 2:</th><td class="field-body"><p class="first">Generic bibliographic fields may contain multiple body elements.</p>
<p class="last">Like this.</p>
</td>
</tr>
</tbody>
</table>
<div class="dedication topic">
<p class="topic-title first">Dedication</p>
<p>For Docutils users &amp; co-developers.</p>
</div>
<div class="abstract topic">
<p class="topic-title first">Abstract</p>
<p>This document is a demonstration of the reStructuredText markup
language, containing examples of all basic reStructuredText
constructs and many advanced constructs.</p>
</div>
<!-- This is a comment. Note how any initial comments are moved by
transforms to after the document title, subtitle, and docinfo. -->
<!-- Above is the document title, and below is the subtitle.
They are transformed from section titles after parsing. -->
<!-- bibliographic fields (which also require a transform): -->
<div class="contents topic" id="table-of-contents">
<p class="topic-title first">Table of Contents</p>
<ul class="auto-toc simple">
<li><a class="reference internal" href="#structural-elements" id="id21">1&nbsp;&nbsp;&nbsp;Structural Elements</a><ul class="auto-toc">
<li><a class="reference internal" href="#section-title" id="id22">1.1&nbsp;&nbsp;&nbsp;Section Title</a></li>
<li><a class="reference internal" href="#transitions" id="id23">1.2&nbsp;&nbsp;&nbsp;Transitions</a></li>
</ul>
</li>
<li><a class="reference internal" href="#body-elements" id="id24">2&nbsp;&nbsp;&nbsp;Body Elements</a><ul class="auto-toc">
<li><a class="reference internal" href="#paragraphs" id="id25">2.1&nbsp;&nbsp;&nbsp;Paragraphs</a><ul class="auto-toc">
<li><a class="reference internal" href="#inline-markup" id="id26">2.1.1&nbsp;&nbsp;&nbsp;Inline Markup</a></li>
</ul>
</li>
<li><a class="reference internal" href="#bullet-lists" id="id27">2.2&nbsp;&nbsp;&nbsp;Bullet Lists</a></li>
<li><a class="reference internal" href="#enumerated-lists" id="id28">2.3&nbsp;&nbsp;&nbsp;Enumerated Lists</a></li>
<li><a class="reference internal" href="#definition-lists" id="id29">2.4&nbsp;&nbsp;&nbsp;Definition Lists</a></li>
<li><a class="reference internal" href="#field-lists" id="id30">2.5&nbsp;&nbsp;&nbsp;Field Lists</a></li>
<li><a class="reference internal" href="#option-lists" id="id31">2.6&nbsp;&nbsp;&nbsp;Option Lists</a></li>
<li><a class="reference internal" href="#literal-blocks" id="id32">2.7&nbsp;&nbsp;&nbsp;Literal Blocks</a></li>
<li><a class="reference internal" href="#line-blocks" id="id33">2.8&nbsp;&nbsp;&nbsp;Line Blocks</a></li>
<li><a class="reference internal" href="#block-quotes" id="id34">2.9&nbsp;&nbsp;&nbsp;Block Quotes</a></li>
<li><a class="reference internal" href="#doctest-blocks" id="id35">2.10&nbsp;&nbsp;&nbsp;Doctest Blocks</a></li>
<li><a class="reference internal" href="#tables" id="id36">2.11&nbsp;&nbsp;&nbsp;Tables</a></li>
<li><a class="reference internal" href="#footnotes" id="id37">2.12&nbsp;&nbsp;&nbsp;Footnotes</a></li>
<li><a class="reference internal" href="#citations" id="id38">2.13&nbsp;&nbsp;&nbsp;Citations</a></li>
<li><a class="reference internal" href="#targets" id="id39">2.14&nbsp;&nbsp;&nbsp;Targets</a><ul class="auto-toc">
<li><a class="reference internal" href="#duplicate-target-names" id="id40">2.14.1&nbsp;&nbsp;&nbsp;Duplicate Target Names</a></li>
<li><a class="reference internal" href="#id16" id="id41">2.14.2&nbsp;&nbsp;&nbsp;Duplicate Target Names</a></li>
</ul>
</li>
<li><a class="reference internal" href="#directives" id="id42">2.15&nbsp;&nbsp;&nbsp;Directives</a><ul class="auto-toc">
<li><a class="reference internal" href="#document-parts" id="id43">2.15.1&nbsp;&nbsp;&nbsp;Document Parts</a></li>
<li><a class="reference internal" href="#images" id="id44">2.15.2&nbsp;&nbsp;&nbsp;Images</a></li>
<li><a class="reference internal" href="#admonitions" id="id45">2.15.3&nbsp;&nbsp;&nbsp;Admonitions</a></li>
<li><a class="reference internal" href="#topics-sidebars-and-rubrics" id="id46">2.15.4&nbsp;&nbsp;&nbsp;Topics, Sidebars, and Rubrics</a></li>
<li><a class="reference internal" href="#target-footnotes" id="id47">2.15.5&nbsp;&nbsp;&nbsp;Target Footnotes</a></li>
<li><a class="reference internal" href="#replacement-text" id="id48">2.15.6&nbsp;&nbsp;&nbsp;Replacement Text</a></li>
<li><a class="reference internal" href="#compound-paragraph" id="id49">2.15.7&nbsp;&nbsp;&nbsp;Compound Paragraph</a></li>
</ul>
</li>
<li><a class="reference internal" href="#substitution-definitions" id="id50">2.16&nbsp;&nbsp;&nbsp;Substitution Definitions</a></li>
<li><a class="reference internal" href="#comments" id="id51">2.17&nbsp;&nbsp;&nbsp;Comments</a></li>
</ul>
</li>
<li><a class="reference internal" href="#error-handling" id="id52">3&nbsp;&nbsp;&nbsp;Error Handling</a></li>
</ul>
</div>
<div class="section" id="structural-elements">
<h3><a class="toc-backref" href="#id21">1&nbsp;&nbsp;&nbsp;Structural Elements</a></h3>
<div class="section" id="section-title">
<h4><a class="toc-backref" href="#id22">1.1&nbsp;&nbsp;&nbsp;Section Title</a></h4>
<p>That's it, the text just above this line.</p>
</div>
<div class="section" id="transitions">
<h4><a class="toc-backref" href="#id23">1.2&nbsp;&nbsp;&nbsp;Transitions</a></h4>
<p>Here's a transition:</p>
<hr class="docutils" />
<p>It divides the section.</p>
</div>
</div>
<div class="section" id="body-elements">
<h3><a class="toc-backref" href="#id24">2&nbsp;&nbsp;&nbsp;Body Elements</a></h3>
<div class="section" id="paragraphs">
<h4><a class="toc-backref" href="#id25">2.1&nbsp;&nbsp;&nbsp;Paragraphs</a></h4>
<p>A paragraph.</p>
<div class="section" id="inline-markup">
<h5><a class="toc-backref" href="#id26">2.1.1&nbsp;&nbsp;&nbsp;Inline Markup</a></h5>
<p>Paragraphs contain text and may contain inline markup: <em>emphasis</em>,
<strong>strong emphasis</strong>, <tt class="docutils literal">inline literals</tt>, standalone hyperlinks
(<a class="reference external" href="http://www.python.org">http://www.python.org</a>), external hyperlinks (<a class="reference external" href="http://www.python.org/">Python</a> <a class="footnote-reference" href="#id17" id="id18">[5]</a>), internal
cross-references (<a class="reference internal" href="#example">example</a>), external hyperlinks with embedded URIs
(<a class="reference external" href="http://www.python.org">Python web site</a>), footnote references
(manually numbered <a class="footnote-reference" href="#id6" id="id1">[1]</a>, anonymous auto-numbered <a class="footnote-reference" href="#id9" id="id2">[3]</a>, labeled
auto-numbered <a class="footnote-reference" href="#label" id="id3">[2]</a>, or symbolic <a class="footnote-reference" href="#id10" id="id4">[*]</a>), citation references
(<a class="citation-reference" href="#cit2002" id="id5">[CIT2002]</a>), substitution references (<img alt="EXAMPLE" src="images/biohazard.png" />), and <span class="target" id="inline-hyperlink-targets">inline
hyperlink targets</span> (see <a class="reference internal" href="#targets">Targets</a> below for a reference back to here).
Character-level inline markup is also possible (although exceedingly
ugly!) in <em>re</em><tt class="docutils literal">Structured</tt><em>Text</em>.  Problems are indicated by
problematic text (generated by processing errors; this one is
intentional).</p>
<p>The default role for interpreted text is <cite>Title Reference</cite>.  Here are
some explicit interpreted text roles: a PEP reference (<a class="reference external" href="http://www.python.org/dev/peps/pep-0287">PEP 287</a>); an
RFC reference (<a class="reference external" href="http://www.faqs.org/rfcs/rfc2822.html">RFC 2822</a>); a <sub>subscript</sub>; a <sup>superscript</sup>;
and explicit roles for <em>standard</em> <strong>inline</strong>
<tt class="docutils literal">markup</tt>.</p>
<!-- DO NOT RE-WRAP THE FOLLOWING PARAGRAPH! -->
<p>Let's test wrapping and whitespace significance in inline literals:
<tt class="docutils literal">This is an example of <span class="pre">--inline-literal</span> <span class="pre">--text,</span> <span class="pre">--including</span> <span class="pre">some--</span>
<span class="pre">strangely--hyphenated-words.</span>&nbsp; <span class="pre">Adjust-the-width-of-your-browser-window</span>
to see how the text is wrapped.&nbsp; <span class="pre">--</span> <span class="pre">----</span> <span class="pre">--------</span>&nbsp; Now note&nbsp;&nbsp;&nbsp; the
spacing&nbsp;&nbsp;&nbsp; between the&nbsp;&nbsp;&nbsp; words of&nbsp;&nbsp;&nbsp; this sentence&nbsp;&nbsp;&nbsp; (words
should&nbsp;&nbsp;&nbsp; be grouped&nbsp;&nbsp;&nbsp; in pairs).</tt></p>
<p>If the <tt class="docutils literal"><span class="pre">--pep-references</span></tt> option was supplied, there should be a
live link to PEP 258 here.</p>
</div>
</div>
<div class="section" id="bullet-lists">
<h4><a class="toc-backref" href="#id27">2.2&nbsp;&nbsp;&nbsp;Bullet Lists</a></h4>
<ul>
<li><p class="first">A bullet list</p>
<ul class="simple">
<li>Nested bullet list.</li>
<li>Nested item 2.</li>
</ul>
</li>
<li><p class="first">Item 2.</p>
<p>Paragraph 2 of item 2.</p>
<ul class="simple">
<li>Nested bullet list.</li>
<li>Nested item 2.<ul>
<li>Third level.</li>
<li>Item 2.</li>
</ul>
</li>
<li>Nested item 3.</li>
</ul>
</li>
</ul>
</div>
<div class="section" id="enumerated-lists">
<h4><a class="toc-backref" href="#id28">2.3&nbsp;&nbsp;&nbsp;Enumerated Lists</a></h4>
<ol class="arabic">
<li><p class="first">Arabic numerals.</p>
<ol class="loweralpha simple">
<li>lower alpha)<ol class="lowerroman">
<li>(lower roman)<ol class="upperalpha">
<li>upper alpha.<ol class="upperroman">
<li>upper roman)</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
</ol>
</li>
<li><p class="first">Lists that don't start at 1:</p>
<ol class="arabic simple" start="3">
<li>Three</li>
<li>Four</li>
</ol>
<ol class="upperalpha simple" start="3">
<li>C</li>
<li>D</li>
</ol>
<ol class="lowerroman simple" start="3">
<li>iii</li>
<li>iv</li>
</ol>
</li>
<li><p class="first">List items may also be auto-enumerated.</p>
</li>
</ol>
</div>
<div class="section" id="definition-lists">
<h4><a class="toc-backref" href="#id29">2.4&nbsp;&nbsp;&nbsp;Definition Lists</a></h4>
<dl class="docutils">
<dt>Term</dt>
<dd>Definition</dd>
<dt>Term <span class="classifier-delimiter">:</span> <span class="classifier">classifier</span></dt>
<dd><p class="first">Definition paragraph 1.</p>
<p class="last">Definition paragraph 2.</p>
</dd>
<dt>Term</dt>
<dd>Definition</dd>
</dl>
</div>
<div class="section" id="field-lists">
<h4><a class="toc-backref" href="#id30">2.5&nbsp;&nbsp;&nbsp;Field Lists</a></h4>
<table class="docutils field-list" frame="void" rules="none">
<col class="field-name" />
<col class="field-body" />
<tbody valign="top">
<tr class="field"><th class="field-name">what:</th><td class="field-body"><p class="first">Field lists map field names to field bodies, like database
records.  They are often part of an extension syntax.  They are
an unambiguous variant of RFC 2822 fields.</p>
</td>
</tr>
<tr class="field"><th class="field-name">how arg1 arg2:</th><td class="field-body"><p class="first">The field marker is a colon, the field name, and a colon.</p>
<p class="last">The field body may contain one or more body elements, indented
relative to the field marker.</p>
</td>
</tr>
</tbody>
</table>
</div>
<div class="section" id="option-lists">
<h4><a class="toc-backref" href="#id31">2.6&nbsp;&nbsp;&nbsp;Option Lists</a></h4>
<p>For listing command-line options:</p>
<table class="docutils option-list" frame="void" rules="none">
<col class="option" />
<col class="description" />
<tbody valign="top">
<tr><td class="option-group">
<kbd><span class="option">-a</span></kbd></td>
<td>command-line option &quot;a&quot;</td></tr>
<tr><td class="option-group">
<kbd><span class="option">-b <var>file</var></span></kbd></td>
<td>options can have arguments
and long descriptions</td></tr>
<tr><td class="option-group">
<kbd><span class="option">--long</span></kbd></td>
<td>options can be long also</td></tr>
<tr><td class="option-group">
<kbd><span class="option">--input=<var>file</var></span></kbd></td>
<td>long options can also have
arguments</td></tr>
<tr><td class="option-group" colspan="2">
<kbd><span class="option">--very-long-option</span></kbd></td>
</tr>
<tr><td>&nbsp;</td><td><p class="first">The description can also start on the next line.</p>
<p class="last">The description may contain multiple body elements,
regardless of where it starts.</p>
</td></tr>
<tr><td class="option-group">
<kbd><span class="option">-x</span>, <span class="option">-y</span>, <span class="option">-z</span></kbd></td>
<td>Multiple options are an &quot;option group&quot;.</td></tr>
<tr><td class="option-group">
<kbd><span class="option">-v</span>, <span class="option">--verbose</span></kbd></td>
<td>Commonly-seen: short &amp; long options.</td></tr>
<tr><td class="option-group" colspan="2">
<kbd><span class="option">-1 <var>file</var></span>, <span class="option">--one=<var>file</var></span>, <span class="option">--two <var>file</var></span></kbd></td>
</tr>
<tr><td>&nbsp;</td><td>Multiple options with arguments.</td></tr>
<tr><td class="option-group">
<kbd><span class="option">/V</span></kbd></td>
<td>DOS/VMS-style options too</td></tr>
</tbody>
</table>
<p>There must be at least two spaces between the option and the
description.</p>
</div>
<div class="section" id="literal-blocks">
<h4><a class="toc-backref" href="#id32">2.7&nbsp;&nbsp;&nbsp;Literal Blocks</a></h4>
<p>Literal blocks are indicated with a double-colon (&quot;::&quot;) at the end of
the preceding paragraph (over there <tt class="docutils literal"><span class="pre">--&gt;</span></tt>).  They can be indented:</p>
<pre class="literal-block">
if literal_block:
    text = 'is left as-is'
    spaces_and_linebreaks = 'are preserved'
    markup_processing = None
</pre>
<p>Or they can be quoted without indentation:</p>
<pre class="literal-block">
&gt;&gt; Great idea!
&gt;
&gt; Why didn't I think of that?
</pre>
</div>
<div class="section" id="line-blocks">
<h4><a class="toc-backref" href="#id33">2.8&nbsp;&nbsp;&nbsp;Line Blocks</a></h4>
<div class="line-block">
<div class="line">This is a line block.  It ends with a blank line.</div>
<div class="line-block">
<div class="line">Each new line begins with a vertical bar (&quot;|&quot;).</div>
<div class="line">Line breaks and initial indents are preserved.</div>
</div>
<div class="line">Continuation lines are wrapped portions of long lines;
they begin with a space in place of the vertical bar.</div>
<div class="line-block">
<div class="line">The left edge of a continuation line need not be aligned with
the left edge of the text above it.</div>
</div>
</div>
<div class="line-block">
<div class="line">This is a second line block.</div>
<div class="line"><br /></div>
<div class="line">Blank lines are permitted internally, but they must begin with a &quot;|&quot;.</div>
</div>
<p>Take it away, Eric the Orchestra Leader!</p>
<blockquote>
<div class="line-block">
<div class="line">A one, two, a one two three four</div>
<div class="line"><br /></div>
<div class="line">Half a bee, philosophically,</div>
<div class="line-block">
<div class="line">must, <em>ipso facto</em>, half not be.</div>
</div>
<div class="line">But half the bee has got to be,</div>
<div class="line-block">
<div class="line"><em>vis a vis</em> its entity.  D'you see?</div>
<div class="line"><br /></div>
</div>
<div class="line">But can a bee be said to be</div>
<div class="line-block">
<div class="line">or not to be an entire bee,</div>
<div class="line-block">
<div class="line">when half the bee is not a bee,</div>
<div class="line-block">
<div class="line">due to some ancient injury?</div>
<div class="line"><br /></div>
</div>
</div>
</div>
<div class="line">Singing...</div>
</div>
</blockquote>
</div>
<div class="section" id="block-quotes">
<h4><a class="toc-backref" href="#id34">2.9&nbsp;&nbsp;&nbsp;Block Quotes</a></h4>
<p>Block quotes consist of indented body elements:</p>
<blockquote>
<p>My theory by A. Elk.  Brackets Miss, brackets.  This theory goes
as follows and begins now.  All brontosauruses are thin at one
end, much much thicker in the middle and then thin again at the
far end.  That is my theory, it is mine, and belongs to me and I
own it, and what it is too.</p>
<p class="attribution">&mdash;Anne Elk (Miss)</p>
</blockquote>
</div>
<div class="section" id="doctest-blocks">
<h4><a class="toc-backref" href="#id35">2.10&nbsp;&nbsp;&nbsp;Doctest Blocks</a></h4>
<pre class="doctest-block">
&gt;&gt;&gt; print 'Python-specific usage examples; begun with &quot;&gt;&gt;&gt;&quot;'
Python-specific usage examples; begun with &quot;&gt;&gt;&gt;&quot;
&gt;&gt;&gt; print '(cut and pasted from interactive Python sessions)'
(cut and pasted from interactive Python sessions)
</pre>
</div>
<div class="section" id="tables">
<h4><a class="toc-backref" href="#id36">2.11&nbsp;&nbsp;&nbsp;Tables</a></h4>
<p>Here's a grid table followed by a simple table:</p>
<table border="1" class="docutils">
<colgroup>
<col width="43%" />
<col width="21%" />
<col width="18%" />
<col width="18%" />
</colgroup>
<thead valign="bottom">
<tr><th class="head">Header row, column 1
(header rows optional)</th>
<th class="head">Header 2</th>
<th class="head">Header 3</th>
<th class="head">Header 4</th>
</tr>
</thead>
<tbody valign="top">
<tr><td>body row 1, column 1</td>
<td>column 2</td>
<td>column 3</td>
<td>column 4</td>
</tr>
<tr><td>body row 2</td>
<td colspan="3">Cells may span columns.</td>
</tr>
<tr><td>body row 3</td>
<td rowspan="2">Cells may
span rows.</td>
<td colspan="2" rowspan="2"><ul class="first last simple">
<li>Table cells</li>
<li>contain</li>
<li>body elements.</li>
</ul>
</td>
</tr>
<tr><td>body row 4</td>
</tr>
<tr><td>body row 5</td>
<td colspan="2">Cells may also be
empty: <tt class="docutils literal"><span class="pre">--&gt;</span></tt></td>
<td>&nbsp;</td>
</tr>
</tbody>
</table>
<table border="1" class="docutils">
<colgroup>
<col width="31%" />
<col width="31%" />
<col width="38%" />
</colgroup>
<thead valign="bottom">
<tr><th class="head" colspan="2">Inputs</th>
<th class="head">Output</th>
</tr>
<tr><th class="head">A</th>
<th class="head">B</th>
<th class="head">A or B</th>
</tr>
</thead>
<tbody valign="top">
<tr><td>False</td>
<td>False</td>
<td>False</td>
</tr>
<tr><td>True</td>
<td>False</td>
<td>True</td>
</tr>
<tr><td>False</td>
<td>True</td>
<td>True</td>
</tr>
<tr><td>True</td>
<td>True</td>
<td>True</td>
</tr>
</tbody>
</table>
</div>
<div class="section" id="footnotes">
<h4><a class="toc-backref" href="#id37">2.12&nbsp;&nbsp;&nbsp;Footnotes</a></h4>
<table class="docutils footnote" frame="void" id="id6" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label">[1]</td><td><em>(<a class="fn-backref" href="#id1">1</a>, <a class="fn-backref" href="#id7">2</a>)</em> <p>A footnote contains body elements, consistently indented by at
least 3 spaces.</p>
<p class="last">This is the footnote's second paragraph.</p>
</td></tr>
</tbody>
</table>
<table class="docutils footnote" frame="void" id="label" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label">[2]</td><td><em>(<a class="fn-backref" href="#id3">1</a>, <a class="fn-backref" href="#id8">2</a>)</em> Footnotes may be numbered, either manually (as in <a class="footnote-reference" href="#id6" id="id7">[1]</a>) or
automatically using a &quot;#&quot;-prefixed label.  This footnote has a
label so it can be referred to from multiple places, both as a
footnote reference (<a class="footnote-reference" href="#label" id="id8">[2]</a>) and as a hyperlink reference
(<a class="reference internal" href="#label">label</a>).</td></tr>
</tbody>
</table>
<table class="docutils footnote" frame="void" id="id9" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label"><a class="fn-backref" href="#id2">[3]</a></td><td>This footnote is numbered automatically and anonymously using a
label of &quot;#&quot; only.</td></tr>
</tbody>
</table>
<table class="docutils footnote" frame="void" id="id10" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label"><a class="fn-backref" href="#id4">[*]</a></td><td>Footnotes may also use symbols, specified with a &quot;*&quot; label.
Here's a reference to the next footnote: <a class="footnote-reference" href="#id12" id="id11">[†]</a>.</td></tr>
</tbody>
</table>
<table class="docutils footnote" frame="void" id="id12" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label"><a class="fn-backref" href="#id11">[†]</a></td><td>This footnote shows the next symbol in the sequence.</td></tr>
</tbody>
</table>
<table class="docutils footnote" frame="void" id="id13" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label">[4]</td><td>Here's an unreferenced footnote, with a reference to a
nonexistent footnote:</td></tr>
</tbody>
</table>
</div>
<div class="section" id="citations">
<h4><a class="toc-backref" href="#id38">2.13&nbsp;&nbsp;&nbsp;Citations</a></h4>
<table class="docutils citation" frame="void" id="cit2002" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label">[CIT2002]</td><td><em>(<a class="fn-backref" href="#id5">1</a>, <a class="fn-backref" href="#id14">2</a>)</em> Citations are text-labeled footnotes. They may be
rendered separately and differently from footnotes.</td></tr>
</tbody>
</table>
<p>Here's a reference to the above, <a class="citation-reference" href="#cit2002" id="id14">[CIT2002]</a>
citation.</p>
</div>
<div class="section" id="targets">
<h4><a class="toc-backref" href="#id39">2.14&nbsp;&nbsp;&nbsp;Targets</a></h4>
<p id="example">This paragraph is pointed to by the explicit &quot;example&quot; target. A
reference can be found under <a class="reference internal" href="#inline-markup">Inline Markup</a>, above. Inline
hyperlink targets are also possible.</p>
<p>Section headers are implicit targets, referred to by name. See
<a class="reference internal" href="#targets">Targets</a>, which is a subsection of <a class="reference internal" href="#body-elements">Body Elements</a>.</p>
<p>Explicit external targets are interpolated into references such as
&quot;<a class="reference external" href="http://www.python.org/">Python</a> <a class="footnote-reference" href="#id17" id="id19">[5]</a>&quot;.</p>
<p>Targets may be indirect and anonymous.  Thus <a class="reference internal" href="#targets">this phrase</a> may also
refer to the <a class="reference internal" href="#targets">Targets</a> section.</p>
<p>Here's a hyperlink reference without a target, which generates an
error.</p>
<div class="section" id="duplicate-target-names">
<h5><a class="toc-backref" href="#id40">2.14.1&nbsp;&nbsp;&nbsp;Duplicate Target Names</a></h5>
<p>Duplicate names in section headers or other implicit targets will
generate &quot;info&quot; (level-1) system messages.  Duplicate names in
explicit targets will generate &quot;warning&quot; (level-2) system messages.</p>
</div>
<div class="section" id="id16">
<h5><a class="toc-backref" href="#id41">2.14.2&nbsp;&nbsp;&nbsp;Duplicate Target Names</a></h5>
<p>Since there are two &quot;Duplicate Target Names&quot; section headers, we
cannot uniquely refer to either of them by name.  If we try to (like
this: Duplicate Target Names), an error is generated.</p>
</div>
</div>
<div class="section" id="directives">
<h4><a class="toc-backref" href="#id42">2.15&nbsp;&nbsp;&nbsp;Directives</a></h4>
<div class="contents local topic" id="contents">
<ul class="auto-toc simple">
<li><a class="reference internal" href="#document-parts" id="id53">2.15.1&nbsp;&nbsp;&nbsp;Document Parts</a></li>
<li><a class="reference internal" href="#images" id="id54">2.15.2&nbsp;&nbsp;&nbsp;Images</a></li>
<li><a class="reference internal" href="#admonitions" id="id55">2.15.3&nbsp;&nbsp;&nbsp;Admonitions</a></li>
<li><a class="reference internal" href="#topics-sidebars-and-rubrics" id="id56">2.15.4&nbsp;&nbsp;&nbsp;Topics, Sidebars, and Rubrics</a></li>
<li><a class="reference internal" href="#target-footnotes" id="id57">2.15.5&nbsp;&nbsp;&nbsp;Target Footnotes</a></li>
<li><a class="reference internal" href="#replacement-text" id="id58">2.15.6&nbsp;&nbsp;&nbsp;Replacement Text</a></li>
<li><a class="reference internal" href="#compound-paragraph" id="id59">2.15.7&nbsp;&nbsp;&nbsp;Compound Paragraph</a></li>
</ul>
</div>
<p>These are just a sample of the many reStructuredText Directives.  For
others, please see
<a class="reference external" href="http://docutils.sourceforge.net/docs/ref/rst/directives.html">http://docutils.sourceforge.net/docs/ref/rst/directives.html</a>.</p>
<div class="section" id="document-parts">
<h5><a class="toc-backref" href="#id53">2.15.1&nbsp;&nbsp;&nbsp;Document Parts</a></h5>
<p>An example of the &quot;contents&quot; directive can be seen above this section
(a local, untitled table of <a class="reference internal" href="#contents">contents</a>) and at the beginning of the
document (a document-wide <a class="reference internal" href="#table-of-contents">table of contents</a>).</p>
</div>
<div class="section" id="images">
<h5><a class="toc-backref" href="#id54">2.15.2&nbsp;&nbsp;&nbsp;Images</a></h5>
<p>An image directive (also clickable -- a hyperlink reference):</p>
<a class="reference internal image-reference" href="#directives"><img alt="images/title.png" src="images/title.png" /></a>
<p>A figure directive:</p>
<div class="figure">
<img alt="reStructuredText, the markup syntax" src="images/title.png" />
<p class="caption">A figure is an image with a caption and/or a legend:</p>
<div class="legend">
<table border="1" class="docutils">
<colgroup>
<col width="20%" />
<col width="80%" />
</colgroup>
<tbody valign="top">
<tr><td>re</td>
<td>Revised, revisited, based on 're' module.</td>
</tr>
<tr><td>Structured</td>
<td>Structure-enhanced text, structuredtext.</td>
</tr>
<tr><td>Text</td>
<td>Well it is, isn't it?</td>
</tr>
</tbody>
</table>
<p>This paragraph is also part of the legend.</p>
</div>
</div>
</div>
<div class="section" id="admonitions">
<h5><a class="toc-backref" href="#id55">2.15.3&nbsp;&nbsp;&nbsp;Admonitions</a></h5>
<div class="attention">
<p class="first admonition-title">Attention!</p>
<p class="last">Directives at large.</p>
</div>
<div class="caution">
<p class="first admonition-title">Caution!</p>
<p class="last">Don't take any wooden nickels.</p>
</div>
<div class="danger">
<p class="first admonition-title">!DANGER!</p>
<p class="last">Mad scientist at work!</p>
</div>
<div class="error">
<p class="first admonition-title">Error</p>
<p class="last">Does not compute.</p>
</div>
<div class="hint">
<p class="first admonition-title">Hint</p>
<p class="last">It's bigger than a bread box.</p>
</div>
<div class="important">
<p class="first admonition-title">Important</p>
<ul class="last simple">
<li>Wash behind your ears.</li>
<li>Clean up your room.</li>
<li>Call your mother.</li>
<li>Back up your data.</li>
</ul>
</div>
<div class="note">
<p class="first admonition-title">Note</p>
<p class="last">This is a note.</p>
</div>
<div class="tip">
<p class="first admonition-title">Tip</p>
<p class="last">15% if the service is good.</p>
</div>
<div class="warning">
<p class="first admonition-title">Warning</p>
<p class="last">Strong prose may provoke extreme mental exertion.
Reader discretion is strongly advised.</p>
</div>
<div class="admonition-and-by-the-way admonition">
<p class="first admonition-title">And, by the way...</p>
<p class="last">You can make up your own admonition too.</p>
</div>
</div>
<div class="section" id="topics-sidebars-and-rubrics">
<h5><a class="toc-backref" href="#id56">2.15.4&nbsp;&nbsp;&nbsp;Topics, Sidebars, and Rubrics</a></h5>
<div class="sidebar">
<p class="first sidebar-title">Sidebar Title</p>
<p class="sidebar-subtitle">Optional Subtitle</p>
<p>This is a sidebar.  It is for text outside the flow of the main
text.</p>
<p class="rubric">This is a rubric inside a sidebar</p>
<p class="last">Sidebars often appears beside the main text with a border and
background color.</p>
</div>
<div class="topic">
<p class="topic-title first">Topic Title</p>
<p>This is a topic.</p>
</div>
<p class="rubric">This is a rubric</p>
</div>
<div class="section" id="target-footnotes">
<h5><a class="toc-backref" href="#id57">2.15.5&nbsp;&nbsp;&nbsp;Target Footnotes</a></h5>
<table class="docutils footnote" frame="void" id="id17" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label">[5]</td><td><em>(<a class="fn-backref" href="#id18">1</a>, <a class="fn-backref" href="#id19">2</a>, <a class="fn-backref" href="#id20">3</a>)</em> <a class="reference external" href="http://www.python.org/">http://www.python.org/</a></td></tr>
</tbody>
</table>
</div>
<div class="section" id="replacement-text">
<h5><a class="toc-backref" href="#id58">2.15.6&nbsp;&nbsp;&nbsp;Replacement Text</a></h5>
<p>I recommend you try <a class="reference external" href="http://www.python.org/">Python, <em>the</em> best language around</a> <a class="footnote-reference" href="#id17" id="id20">[5]</a>.</p>
</div>
<div class="section" id="compound-paragraph">
<h5><a class="toc-backref" href="#id59">2.15.7&nbsp;&nbsp;&nbsp;Compound Paragraph</a></h5>
<div class="compound">
<p class="compound-first">This paragraph contains a literal block:</p>
<pre class="compound-middle literal-block">
Connecting... OK
Transmitting data... OK
Disconnecting... OK
</pre>
<p class="compound-last">and thus consists of a simple paragraph, a literal block, and
another simple paragraph.  Nonetheless it is semantically <em>one</em>
paragraph.</p>
</div>
<p>This construct is called a <em>compound paragraph</em> and can be produced
with the &quot;compound&quot; directive.</p>
</div>
</div>
<div class="section" id="substitution-definitions">
<h4><a class="toc-backref" href="#id50">2.16&nbsp;&nbsp;&nbsp;Substitution Definitions</a></h4>
<p>An inline image (<img alt="EXAMPLE" src="images/biohazard.png" />) example:</p>
<p>(Substitution definitions are not visible in the HTML source.)</p>
</div>
<div class="section" id="comments">
<h4><a class="toc-backref" href="#id51">2.17&nbsp;&nbsp;&nbsp;Comments</a></h4>
<p>Here's one:</p>
<!-- Comments begin with two dots and a space. Anything may
follow, except for the syntax of footnotes, hyperlink
targets, directives, or substitution definitions.

Double-dashes - - "- -" - - must be escaped somehow in HTML output. -->
<p>(View the HTML source to see the comment.)</p>
</div>
</div>
<div class="section" id="error-handling">
<h3><a class="toc-backref" href="#id52">3&nbsp;&nbsp;&nbsp;Error Handling</a></h3>
<p>Any errors caught during processing will generate system messages.</p>
<p>There should be six messages in the following, auto-generated
section, &quot;Docutils System Messages&quot;:</p>
<!-- section should be added by Docutils automatically -->
</div>
</div>
]]></content:encoded>
    </item>
  </channel>
</rss>
