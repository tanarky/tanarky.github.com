<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
     xmlns:content="http://purl.org/rss/1.0/modules/content/"
     xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
     xmlns:atom="http://www.w3.org/2005/Atom"
     xmlns:dc="http://purl.org/dc/elements/1.1/"
     xmlns:wfw="http://wellformedweb.org/CommentAPI/"
     >
  <channel>
    <title>tanarky.com</title>
    <link>http://tanarky.com/blog</link>
    <description>tanarky website</description>
    <pubDate>Sat, 11 Feb 2012 11:50:21 GMT</pubDate>
    <generator>Blogofile</generator>
    <sy:updatePeriod>hourly</sy:updatePeriod>
    <sy:updateFrequency>1</sy:updateFrequency>
    <item>
      <title>(できるだけ)ポータブルなPython開発環境</title>
      <link>http://tanarky.com/blog/2012/01/20/00a_portable_python_env</link>
      <pubDate>Fri, 20 Jan 2012 14:00:00 JST</pubDate>
      <category><![CDATA[python]]></category>
      <category><![CDATA[tips]]></category>
      <category><![CDATA[install]]></category>
      <guid isPermaLink="true">http://tanarky.com/blog/2012/01/20/00a_portable_python_env</guid>
      <description>(できるだけ)ポータブルなPython開発環境</description>
      <content:encoded><![CDATA[<div class="document">
<div class="contents topic" id="id1">
<p class="topic-title first">目次</p>
<ul class="simple">
<li><a class="reference internal" href="#id2" id="id5">背景</a></li>
<li><a class="reference internal" href="#buildoutvirtualenv1" id="id6">buildoutとvirtualenvを用いた1つの解</a><ul>
<li><a class="reference internal" href="#id3" id="id7">参考手順</a></li>
</ul>
</li>
<li><a class="reference internal" href="#id4" id="id8">まとめ など</a></li>
</ul>
</div>
<div class="section" id="id2">
<h3><a class="toc-backref" href="#id5">背景</a></h3>
<p>せっかくLLをさわっているので、</p>
<ul class="simple">
<li>OS依存が少ない</li>
<li>複数versionの環境の混在</li>
<li>構築の簡単さ</li>
<li>本番環境でも使える性能</li>
<li>環境をコピーできる</li>
</ul>
<p>というPython環境が欲しくて、色々考えてる</p>
</div>
<div class="section" id="buildoutvirtualenv1">
<h3><a class="toc-backref" href="#id6">buildoutとvirtualenvを用いた1つの解</a></h3>
<p>以下のようなことを考えた</p>
<ul class="simple">
<li>コンパイルが必要なライブラリ(Python自体も含む)をbuildoutでビルドする<ul>
<li>Python</li>
<li>zlib</li>
<li>Graphviz</li>
<li>画像系パッケージ?</li>
<li>(yum/aptitudeでもいいが、後々環境が混在できなくなるリスク)</li>
</ul>
</li>
<li>buldoutでbuildしたpythonを指定して、virtualenv環境を構築する</li>
<li>PyPIパッケージは、virtualenvにinstallする</li>
<li>サービスはvirtualenv環境ごとに分ける<ul>
<li>サービスごとにpythonのバージョンをわけるためにBuildするのは大変</li>
<li>サービスごとにライブラリのバージョンが競合する可能性はあるので
その時はbuildout環境を増やす</li>
</ul>
</li>
<li>自分で書いたコードは、githubや自前distサーバなどにパッケージとしておいておく</li>
<li>環境から、distサーバ指定でpip installしてdeploy</li>
</ul>
<div class="section" id="id3">
<h4><a class="toc-backref" href="#id7">参考手順</a></h4>
<ol class="arabic simple">
<li>まずは、buildoutでOS依存しない場所にPythonと
依存するライブラリなどをビルド</li>
</ol>
<div class="highlight"><pre>% mkdir /tmp/py27
% cd /tmp/py27
% (buildout.cfg + bootstrap.pyを用意)
% cat buildout.cfg
[buildout]
python = python
parts =
    python
    env

[python]
recipe = zc.recipe.cmmi
url = http://www.python.org/ftp/python/2.7.2/Python-2.7.2.tgz
executable = ${buildout:parts-directory}/python/bin/python2.7
environment =
    LDFLAGS=-Wl,-rpath,${buildout:parts-directory}/python/lib
extra_options =
    --enable-unicode=ucs4
    --enable-shared
    --with-threads

[env]
recipe = zc.recipe.egg
eggs =
     virtualenv
     virtualenvwrapper

interpreter = python

% python bootstrap.py
% bin/buildout
</pre></div>
<ol class="arabic simple" start="2">
<li>1.で構築したpythonを使って、virtualenv環境を作る</li>
</ol>
<div class="highlight"><pre>% export WORKON_HOME=/tmp/virtualenvs
% export VIRTUALENVWRAPPER_HOOK_DIR=/tmp/virtualenvs
% export VIRTUALENVWRAPPER_LOG_DIR=/tmp/virtualenvs
## FIXME: クリーンな環境でうまくいくか?
% mkvirtualenv -p /tmp/py27/parts/python/bin/python testenv
% /tmp/virtualenvs/testenv/bin/pip install Flask
% /tmp/virtualenvs/testenv/bin/pip install gunicorn
% /tmp/virtualenvs/testenv/bin/pip install supervisor
</pre></div>
<ol class="arabic simple" start="3">
<li>開発</li>
</ol>
<div class="highlight"><pre>% cat myserver.py

from flask import Flask

app = Flask(__name__)

@app.route(&#39;/&#39;)
def index():
    return &quot;&lt;h1&gt;hello!Yes!&lt;/h1&gt;&quot;

if __name__ == &#39;__main__&#39;:
    app.run(debug=True)
% /tmp/virtualenvs/testenv/bin/python myserver.py
   * Running on http://127.0.0.1:5000/
   * Restarting with reloader
</pre></div>
<ol class="arabic simple" start="4">
<li>インストール</li>
</ol>
<p>cpでinstallしないほうがいい(暫定手順)</p>
<div class="highlight"><pre>% sudo mkdir /tmp/virtualenvs/testenv/lib/python2.7/site-packages/mypj
% touch /tmp/virtualenvs/testenv/lib/python2.7/site-packages/mypj/__init__.py
% sudo cp myserver.py /tmp/virtualenvs/testenv/lib/python2.7/site-packages/mypj/
</pre></div>
<ol class="arabic simple" start="5">
<li>gunicornで本番プロセス起動</li>
</ol>
<p>本当はdaemonモード</p>
<div class="highlight"><pre>% /tmp/virtualenvs/testenv/bin/gunicorn mypj.myserver:app
</pre></div>
</div>
</div>
<div class="section" id="id4">
<h3><a class="toc-backref" href="#id8">まとめ など</a></h3>
<ul class="simple">
<li>gunicornが起動するところまで確認できたので、supervisorで監視体制を整えたい</li>
<li>古めのCentOSでも動くか?</li>
<li>zlib/graphvizなどのライブラリ系もbuildoutに組み込みたい</li>
</ul>
</div>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>PostfixでGmail経由メール送信環境構築 on Ubuntu</title>
      <link>http://tanarky.com/blog/2012/01/02/009_install_postfix_on_ubuntu</link>
      <pubDate>Mon, 02 Jan 2012 14:00:00 JST</pubDate>
      <category><![CDATA[tips]]></category>
      <category><![CDATA[install]]></category>
      <category><![CDATA[ubuntu]]></category>
      <guid isPermaLink="true">http://tanarky.com/blog/2012/01/02/009_install_postfix_on_ubuntu</guid>
      <description>PostfixでGmail経由メール送信環境構築 on Ubuntu</description>
      <content:encoded><![CDATA[<div class="document">
<div class="contents topic" id="id1">
<p class="topic-title first">目次</p>
<ul class="simple">
<li><a class="reference internal" href="#id2" id="id4">環境構築手順</a></li>
<li><a class="reference internal" href="#id3" id="id5">参考</a></li>
</ul>
</div>
<div class="section" id="id2">
<h3><a class="toc-backref" href="#id4">環境構築手順</a></h3>
<p>AppEngineの開発環境で、メール送信機能を使うために
postfixを使ったgmail送信環境の構築を行ったので、メモ。</p>
<p>まずは、package install</p>
<div class="highlight"><pre>% sudo aptitude install postfix
</pre></div>
<p>/etc/postfix/main.cf を編集</p>
<p>以下を追記</p>
<div class="highlight"><pre># tanarky added
mydomain = tanarky.com
myorigin = $myhostname
relayhost = [smtp.gmail.com]:587
smtp_use_tls = yes
smtp_tls_CAfile = /etc/ssl/certs/ca-certificates.crt
smtp_sasl_auth_enable = yes
smtp_sasl_password_maps = hash:/etc/postfix/relay_password
smtp_sasl_security_options = noanonymous
smtp_sasl_tls_security_options = noanonymous
smtp_sasl_mechanism_filter = plain
</pre></div>
<p>パスワードファイル作成</p>
<div class="highlight"><pre>% sudo cat /etc/postfix/relay_password
[smtp.gmail.com]:587 *(Googleアカウント)*@gmail.com:*(Googleアカウントパスワード)*
% sudo postmap /etc/postfix/relay_password
% ls -l /etc/postfix/relay_password*
-rw-r--r-- 1 root root    48 2012-01-01 22:17 /etc/postfix/relay_password
-rw-r--r-- 1 root root 12288 2012-01-01 22:17 /etc/postfix/relay_password.db
% sudo rm /etc/postfix/relay_password
% ls -l /etc/postfix/relay_password*
-rw-r--r-- 1 root root 12288 2012-01-01 22:17 /etc/postfix/relay_password.db
</pre></div>
<p>postfix restartしてテスト送信</p>
<div class="highlight"><pre>% sudo /etc/init.d/postfix restart
% sendmail -t ***
To: ***
From: ***
Subject: hello

world.

.
%
</pre></div>
</div>
<div class="section" id="id3">
<h3><a class="toc-backref" href="#id5">参考</a></h3>
<ul class="simple">
<li><a class="reference external" href="http://www.icoro.com/200908243988.html">http://www.icoro.com/200908243988.html</a></li>
<li><a class="reference external" href="http://blog.tanarky.com/2010/09/centosgmail.html">http://blog.tanarky.com/2010/09/centosgmail.html</a></li>
</ul>
</div>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>CentOS 5.5 に python2.7環境を構築</title>
      <link>http://tanarky.com/blog/2011/11/16/005_python_2.7_install_on_centos_5.5</link>
      <pubDate>Wed, 16 Nov 2011 00:00:00 JST</pubDate>
      <category><![CDATA[python]]></category>
      <category><![CDATA[tips]]></category>
      <category><![CDATA[install]]></category>
      <category><![CDATA[centos]]></category>
      <guid isPermaLink="true">http://tanarky.com/blog/2011/11/16/005_python_2.7_install_on_centos_5.5</guid>
      <description>CentOS 5.5 に python2.7環境を構築</description>
      <content:encoded><![CDATA[<div class="document">
<div class="contents topic" id="id1">
<p class="topic-title first">目次</p>
<ul class="simple">
<li><a class="reference internal" href="#id2" id="id4">手順</a></li>
<li><a class="reference internal" href="#id3" id="id5">参考</a></li>
</ul>
</div>
<div class="section" id="id2">
<h3><a class="toc-backref" href="#id4">手順</a></h3>
<p>CentOS 5.5に入っているpythonのバージョンは、2.4.3と超古いので、
2.7.2の環境を構築したときのメモ</p>
<p>一度2.7.2の環境を作れば、
あとはvirtualenvで環境を切り分ければいいので、
それまでの手順</p>
<div class="highlight"><pre>% mkdir ~/src_python2.7
% cd ~/src_python2.7
% wget http://www.python.org/ftp/python/2.7.2/Python-2.7.2.tar.bz2
% tar -xvjf Python-2.7.2.tar.bz2
% cd Python-2.7.2
% ./configure --enable-shared --with-threads
% make
% sudo make install
% sudo ln -s /opt/python2.7/lib/libpython2.7.so.1.0 /lib64/libpython2.7.so.1.0
% sudo ln -s /usr/local/bin/python2.7 /usr/bin/python2.7
% mkdir ~/src_setuptools
% cd ~/src_setuptools
% wget http://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11-py2.7.egg
% sudo yum install zlib-devel.x86_64
% chmod +x setuptools-0.6c11-py2.7.egg
% sudo ./setuptools-0.6c11-py2.7.egg
% sudo easy_install pip
% sudo pip install virtualenv virtualenvwrapper
</pre></div>
<p>virtualenv環境構築。
後で配布することを想定して、デフォルトの&quot;.virtualenvs&quot;から&quot;virtualenv&quot;に変更する。</p>
<p>以下を.zshrcに追加</p>
<div class="highlight"><pre>export WORKON_HOME=$HOME/virtualenvs
source /usr/local/bin/virtualenvwrapper.sh
</pre></div>
<p>環境を構築</p>
<div class="highlight"><pre>% mkvirtualenv -p /usr/local/bin/python2.7 2.7.2
% workon 2.7.2
</pre></div>
<p>とりあえずうまく環境が構築できたが、
複数台環境にpython環境を丸ごと配布したいので、
次はその方法を調べてみる。</p>
</div>
<div class="section" id="id3">
<h3><a class="toc-backref" href="#id5">参考</a></h3>
<ul class="simple">
<li><a class="reference external" href="http://python.codenote.net/python/centos5-6%E3%81%ABpython2-7%E3%81%A8virtualenv%E3%81%A7%E9%96%8B%E7%99%BA%E7%92%B0%E5%A2%83%E3%82%92%E6%95%B4%E3%81%88%E3%82%8B.html">CentOS5.6 に Python2.7 + virtualenv で開発環境を整える | Pythonコード帳</a></li>
</ul>
</div>
</div>
]]></content:encoded>
    </item>
    <item>
      <title>Ubuntu 10.04 LTS server でpython環境をbuildoutで構築する</title>
      <link>http://tanarky.com/blog/2011/11/09/007_python_buildout_on_ubuntu_server_x86_64</link>
      <pubDate>Wed, 09 Nov 2011 14:00:00 JST</pubDate>
      <category><![CDATA[python]]></category>
      <category><![CDATA[tips]]></category>
      <category><![CDATA[install]]></category>
      <category><![CDATA[ubuntu]]></category>
      <guid isPermaLink="true">http://tanarky.com/blog/2011/11/09/007_python_buildout_on_ubuntu_server_x86_64</guid>
      <description>Ubuntu 10.04 LTS server でpython環境をbuildoutで構築する</description>
      <content:encoded><![CDATA[<div class="document">
<div class="contents topic" id="id1">
<p class="topic-title first">目次</p>
<ul class="simple">
<li><a class="reference internal" href="#id2" id="id3">手順</a></li>
</ul>
</div>
<div class="section" id="id2">
<h3><a class="toc-backref" href="#id3">手順</a></h3>
<div class="highlight"><pre>% sudo apt-get install zsh aptitude
% sudo aptitude update
% sudo aptitude install gcc zlib1g-dev libc6-dev libjpeg-dev -y
</pre></div>
<ul class="simple">
<li>2012/01/22 追記<ul>
<li>PILでjpegサポートさせるために、libjpeg-devを追加</li>
</ul>
</li>
</ul>
</div>
</div>
]]></content:encoded>
    </item>
  </channel>
</rss>
