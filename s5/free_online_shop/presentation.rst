============================================================
無料online shopシステムについて
============================================================

名称未定

背景
============================================================

売れてなくても固定費がかかる -> 個人参入の障壁

なぜ無料じゃないか
============================================================

- サーバ代金
- 運営側管理コスト
- SSL証明書代金


ショッピングモール型ビジネス
============================================================

- pros

  - (ポイントなどによる)顧客の囲い込みができる

- cons

  - 自由度が低い傾向にある

    - ドメイン
    - セキュリティ対策による禁止事項(Jsなど)

  - 運営側のコストが高い
  - 固定費がかかる
  - 仕組みが複雑化する傾向にある


無料版
============================================================

サーバはAppEngineを使う

無料版の問題点
============================================================

- 負荷に耐えられない

  - 特に画像

- appspot.comドメイン固定

有料版
============================================================

EC2をベースとしたインフラにのせかえ

固定費徴収

どうやって稼ぐか
============================================================

- 無料版 -> Adsenseをはる＋注文成約に応じたロイヤルティ課金(1-2%程度)
- 有料版 -> 固定費(アクセスやカスタマイズに応じて段階課金)+ロイヤルティ(1-2%程度)

システム構成
============================================================

- 無料版 -> Appengineのアカウントを取得してもらい、こちら側からコードをPush、Webツールでデータ運用
- 有料版 -> 無料版の仕組み(コード)をEC2上で動かし、負荷対策やBackup強化などを行う

機能
============================================================

無料版、有料版ともに、管理用APIを搭載し、データを一元管理できる

- 商品データ参照
- 注文データ参照
- ページデザインデータ参照
- 開店ステータス参照・更新

ロイヤルティ未払い、などあった場合、開店ステータス更新APIから強制閉店させる、など

実装
============================================================

- Python
- Twitter Bootstrap

DEMO
============================================================

demo

技術的課題
============================================================

- AppEngineへのupload自動化
- 管理システム開発
- 請求システム開発

今後の課題(TODO)
============================================================

- 商品検索機能の拡充
- 物流連携課題の克服
- 決済方法の拡充とカート統一

まとめ
============================================================

がんばる

